load "brainstorm2.m";
ysq_E;
us;
CrossRation(us[1],us[2],us[3],us[4]);
CrossRatio(us[1],us[2],us[3],us[4]);
lambda := $1;
u;
Parent(u);
R0<X> := PolynomialRing(fld);
E_leg := EllipticCurve(X*(X-1)*(X - lambda));
E_leg;
IsIsomorphic(E,E_leg);
jInvariant(E);
jInvariant(E_leg);
ReducedMinimalWeierstrassModel;
BaseRing(E);
BaseRing(E_leg);
ReducedMinimalWeierstrassModel(E);
MinimalModel(E);
ClassNumber(fld : GRH := true);
ClassNumber;
ClassNumber(fld : Proof := "GRH");
fld;
Degree(fld);
E_al := ChangeRing(E,AlgebraicClosure(fld));
E;
DefiningPolynomial(E);
fld2 := NumberField($1);
DefiningEquation(E);
aInvs(E);
aInvariants(E);
E;
bInvariants(E);
HyperellipticPolynomial(E);
HyperellipticPolynomials(E);
poly,_ := HyperellipticPolynomials(E);
poly;
IsIrreducible(poly);
Factorization(poly);
x1;
Roots(poly,fld);
roots := $1;
roots := [root[1][1] : root in roots];
roots;
fld2 := NumberField(X^2 - (roots[1] - roots[2]));
fld2;
E_al := ChangeRing(E, fld2);
E_leg_al := ChangeRing(E_leg, fld2);
IsIsomorphic(E_al,E_leg_al);
fld2 := NumberField(X^2 - (roots[1] - roots[3]));
E_al := ChangeRing(E, fld2);
E_leg_al := ChangeRing(E_leg, fld2);
IsIsomorphic(E_al,E_leg_al);
fld2 := NumberField(X^2 - (roots[2] - roots[3]));
E_al := ChangeRing(E, fld2);
E_leg_al := ChangeRing(E_leg, fld2);
IsIsomorphic(E_al,E_leg_al);
QuadraticTwist;
E_twist := QuadraticTwist(E, roots[1] - roots[2]);
jInvariant(E_twist);
IsIsomorphic(E,E_twist);
IsIsomorphic(E_leg,E_twist);
E;
E_leg;
ysq;
jInvariant(E);
jInvariant(E_leg);
IsIsomorphic(E,E_leg);
poly;
Factorization($1);
fld2 := NumberField(X^2 - (roots[1] - roots[2]));
E_al := ChangeRing(E, fld2);
E_leg_al := ChangeRing(E_leg, fld2);
IsIsomorphic(E_al,E_leg_al);
ClassNumber(fld : Proof := "GRH");
IsQuadraticTwist(E, E_leg);
_, new := $1;
fld2 := NumberField(X^2 - new);
E_al := ChangeRing(E, fld2);
E_leg_al := ChangeRing(E_leg, fld2);
IsIsomorphic(E_al, E_leg_al);
_, mp_leg := IsIsomorphic(E_al, E_leg_al);
ysq_E;
ysq_leg := Pushforward(ysq_E,mp_leg);
ysq_leg := Pushforward(mp_leg,ysq_leg);
ysq_leg := Pushforward(mp_leg,ysq_E);
E_al;
KE_al := FunctionField(E_al);
ysq_E_al := KE_al!ysq_E;
KE_al;
KE;
Parent(ysq_E);
KE := FunctionField(E);
mp_al := map<KE -> KE_al | KE_al.1>;
mp_leg;
map<E -> E_al | KE_al.1>;
map<E -> E_al | [KE_al.1]>;
E_al,mp_al := ChangeRing(E, fld2);
BaseChange(E,fld2);
E2, mp2 := BaseChange(E,fld2);
fld2,mp2 := NumberField(X^2 - new);
Numerator(ysq_E);
Parent(ysq_E);
fld2;
Coefficients(ysq_E);
ysq_E_cs := Coefficients(ysq_E);
KE!ysq_E_cs;
Numerator(ysq_E);
Parent($1);
ChangeRing($1,fld2);
$1!ysq_E;
Parent(ysq_E);
CoordinateRing(E_leg_al);
Parent(Numerator(ysq_E));
IsIsomorphic(E_al, E_leg_al);
fld2;
Thingie := Parent(Numerator(ysq_E));
Thingie2 := ChangeRing(Thingie,fld2);
Thingie2!Numerator(ysq_E);
Thingie2!(Numerator(ysq_E));
ChangeRing(Numerator(ysq_E),fld2));
ChangeRing(Numerator(ysq_E),fld2);
Thingie2, mp_al := BaseChange(Thingie,fld2);
A := CoordinateRing(E);
A_al := CoordinateRing(E_al);
A;
A_al;
hom<A -> A_al | [A_al.1, A_al.2, A_al.3]>;
mp_al := $1;
ysq_al_num := mp_al(Numerator(ysq_E));
Domain(mp_al);
Parent(Numerator(ysq_E));
AffinePatch(E,1);
CoordinateRing($1);
A := CoordinateRing(AffinePatch(E,1));
ysq_E in A;
Parent(ysq_E) eq A;
Parent(Numerato(ysq_E)) eq A;
Parent(Numerator(ysq_E)) eq A;
A_al := CoordinateRing(AffinePatch(E_al,1));
mp_al := hom<A -> A_al | [A_al.1, A_al.2]>;
ysq_num_al := mp_al(Numerator(ysq_E));
ysq_den_al := mp_al(Denominator(ysq_E));
ysq_den_al
;
Parent(ysq_num_al);
KE_al;
KE_al!(ysq_num_al/ysq_den_al);
KE_al!(ysq_num_al)
KE_al!(ysq_num_al);
ysq_E_al := KE_al!(ysq_num_al)/KE_al!(ysq_den_al);
mp_leg;
Pushforward(mp_leg,ysq_E_al)
;
ysq_leg_al := $1;
Divisor($1);
Support($1);